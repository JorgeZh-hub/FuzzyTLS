# Lista de rutas (origen, destino)
routes = [
    ("40668087#1", "542428845#0", 1),
    ("40668087#1", "337277957#0", 1),
    ("40668087#1", "1053072563", 1),
    ("40668087#1", "337277973#1", 1),
    ("40668087#1", "337277984#0", 1),
    ("40668087#1", "337277970#1", 1),
    ("40668087#1", "337277951#1", 1),
    ("49217102", "337277951#3", 1),
    ("49217102", "1053072563", 1),
    ("49217102", "337277973#1", 1),
    ("49217102", "337277984#0", 1),
    ("49217102", "542428845#0", 1),
    ("42143912#5", "337277957#0", 1),
    ("42143912#5", "542428845#0", 1),
    ("42143912#5", "1053072563", 1),
    ("42143912#5", "337277973#1", 1),
    ("567060342#0", "337277984#0", 1),
    ("567060342#0", "542428845#0", 1),
    ("567060342#0", "337277957#0", 1),
]


routes_straight = [
    ("40668087#1", "337277957#0", 1),   # Horizontal
    ("567060342#0", "337277984#0", 1),   # Horizontal
    ("49217102", "1053072563", 1),
    ("42143912#5", "542428845#0", 1),
]

#routes = [
#    ("567060342#0", "337277973#1", 1 ),
#    ("337277951#1", "1053072563", 1)
#]

# Intervalos horarios (hora en segundos desde 00:00) 
hourly_intervals = [
    (0, 18000, 2000//2),  #(Hora inicio, hora fin, veh que se distribuye entre todas las rutas)
    (18000, 28000, 3000//2),
    (28000, 38000, 2500//2),
    #(10200, 20400, 1500),
    #(20400, 30600 , 3000),
]

hourly_intervals = [
    # 🌙 00:00 – 04:00: Noche baja
    (0,     14400, 789),     # 00:00 – 04:00

    # 🌄 04:00 – 06:00: Subida progresiva al pico de la mañana
    (14400, 16200, 900),     # 04:00 – 04:30
    (16200, 18000, 1052),    # 04:30 – 05:00
    (18000, 19800, 1200),    # 05:00 – 05:30
    (19800, 21600, 1350),    # 05:30 – 06:00
    (21600, 23400, 1475),    # 06:00 – 06:30
    (23400, 25200, 1578),    # 06:30 – 07:00

    # ⬇️ 07:00 – 09:00: Bajada suave
    (25200, 27000, 1475),    # 07:00 – 07:30
    (27000, 28800, 1350),    # 07:30 – 08:00
    (28800, 30600, 1200),    # 08:00 – 08:30
    (30600, 32400, 1052),    # 08:30 – 09:00

    # ☀️ 09:00 – 11:00: Valle medio
    (32400, 34200, 900),     # 09:00 – 09:30
    (34200, 36000, 789),     # 09:30 – 10:00
    (36000, 37800, 789),     # 10:00 – 10:30
    (37800, 39600, 789),     # 10:30 – 11:00

    # 🌞 11:00 – 13:00: Subida al pico de mediodía
    (39600, 41400, 900),     # 11:00 – 11:30
    (41400, 43200, 1052),    # 11:30 – 12:00
    (43200, 45000, 1315),    # 12:00 – 12:30
    (45000, 46800, 1578),    # 12:30 – 13:00

    # ⬇️ 13:00 – 15:00: Bajada progresiva
    (46800, 48600, 1350),    # 13:00 – 13:30
    (48600, 50400, 1200),    # 13:30 – 14:00
    (50400, 52200, 1052),    # 14:00 – 14:30
    (52200, 54000, 900),     # 14:30 – 15:00

    # 🌤️ 15:00 – 17:00: Valle de la tarde
    (54000, 55800, 789),     # 15:00 – 15:30
    (55800, 57600, 789),     # 15:30 – 16:00
    (57600, 59400, 789),     # 16:00 – 16:30
    (59400, 61200, 789),     # 16:30 – 17:00

    # 🌆 17:00 – 19:00: Subida al pico de la noche
    (61200, 63000, 900),     # 17:00 – 17:30
    (63000, 64800, 1052),    # 17:30 – 18:00
    (64800, 66600, 1315),    # 18:00 – 18:30
    (66600, 68400, 1578),    # 18:30 – 19:00

    # 🌃 19:00 – 21:00: Bajada progresiva
    (68400, 70200, 1350),    # 19:00 – 19:30
    (70200, 72000, 1200),    # 19:30 – 20:00
    (72000, 73800, 1052),    # 20:00 – 20:30
    (73800, 75600, 900),     # 20:30 – 21:00

    # 🌙 21:00 – 00:00: Tráfico nocturno bajo
    (75600, 79200, 789),     # 21:00 – 22:00
    (79200, 82800, 789),     # 22:00 – 23:00
    (82800, 86400, 789),     # 23:00 – 24:00
]


routes = routes

# Generar todas las entradas y ordenarlas por tiempo
all_flows = []
flow_id = 1
for begin, end, vph in hourly_intervals:
    for route_from, route_to, density in routes:
        all_flows.append({
            "id": f"f{flow_id}",
            "from": route_from,
            "to": route_to,
            "begin": begin,
            "end": end,
            "vph": int((vph // len(routes))*density)
        })
        flow_id += 1

# Ordenar flujos por tiempo de inicio
all_flows.sort(key=lambda x: x["begin"])

# Escribir archivo XML
output_lines = ['<?xml version="1.0" encoding="UTF-8"?>', '<routes>']
output_lines.append('    <vType id="car" accel="1.2" decel="3.0" sigma="0.5" length="4.2" maxSpeed="13.9" />')

for flow in all_flows:
    output_lines.append(
        f'    <flow id="{flow["id"]}" from="{flow["from"]}" to="{flow["to"]}" type="car" begin="{flow["begin"]}" end="{flow["end"]}" vehsPerHour="{flow["vph"]}"/>'
    )

output_lines.append('</routes>')

# Guardar archivo
with open("./sumo_files/generated_routes_hourly.rou.xml", "w") as f:
    f.write("\n".join(output_lines))
